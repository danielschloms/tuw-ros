ARG OWNER=osrf
ARG ROS_DISTRO=humble
ARG UBUNTU_DISTRO=jammy
ARG BASE_CONTAINER=ros:${ROS_DISTRO}-desktop
ARG ROOT_CONTAINER=$OWNER/$BASE_CONTAINER 
FROM $ROOT_CONTAINER

# Replace 1000 with your user / group id
ARG MY_USER=robot
ARG MY_NAME="Robot"
ARG MY_PASSWORD="password"
ARG MY_UID=1000
ARG MY_GID=1000
ARG TZ=Europe/Vienna

ENV MY_USER=${MY_USER}
ENV MY_HOME=/home/${MY_USER}

ENV CONFIG_DIR=./config
ENV SCRIPTS_DIR=./scripts
ENV INSTALL_DIR=/install

ARG CONTAINER_PROJECTS_DIR=${MY_HOME}/projects
ARG CONTAINER_PROJECT_NAME="my_project"
ARG CONTAINER_PROJECT_ENV_NAME="MY_PROJECT_DIR"
ENV CONTAINER_PROJECT_NAME=${CONTAINER_PROJECT_NAME}
ENV CONTAINER_PROJECTS_DIR=${CONTAINER_PROJECTS_DIR}
ENV CONTAINER_PROJECT_DIR=${CONTAINER_PROJECTS_DIR}/${CONTAINER_PROJECT_NAME}
ENV CONTAINER_PROJECT_ENV_NAME=${CONTAINER_PROJECT_ENV_NAME}

USER root

RUN apt-get update && apt-get -y upgrade
# timezone
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
# copy scripts to container
COPY ${SCRIPTS_DIR}/ ${INSTALL_DIR}/
# allow to run scripts in the container
RUN chmod -R a+x ${INSTALL_DIR}
# copy keyboard config
COPY ${CONFIG_DIR}/keyboard /etc/default/keyboard
# setup user
RUN $INSTALL_DIR/setup/add_user.sh
# copy env
COPY --chown=${MY_USER}:${MY_USER} ${CONFIG_DIR}/env.sh ${MY_HOME}/projects/env.sh
# copy bash history
COPY --chown=${MY_USER}:${MY_USER} ${CONFIG_DIR}/bash_history ${MY_HOME}/.bash_history
# copy tmux config
COPY --chown=${MY_USER}:${MY_USER} ${CONFIG_DIR}/tmux.conf ${MY_HOME}/.tmux.conf

# install utils (like git, vim, nano, ...)
RUN apt-get install -y \
      cmake            \
      cmake-curses-gui \
      curl             \
      git              \
      gnupg2           \
      keychain         \
      myrepos          \
      nano             \
      python3          \
      python3-pip      \
      python3-transforms3d \
      rsync            \
      tmux             \
      tmuxinator       \
      vim              \
      wget             \
      iputils-ping     \
      libfftw3-dev

# dependencies for stage and stage_ros2
RUN apt-get install -y git  g++ libjpeg8-dev libpng-dev libglu1-mesa-dev libltdl-dev libfltk1.1-dev

# dependencies for rviz2
RUN apt-get install -y libqt5svg5-dev ament-cmake

# dependencies for geographiclib
RUN apt-get install -y geographiclib-tools libgeographic-dev

 #  GUI tools
RUN apt-get install  -y \
      geany \
      meld 

ARG INSTALL_CODE=true
RUN if [ "$INSTALL_CODE" = "true" ]; then $INSTALL_DIR/setup/install_code.sh; fi

 #  ROS packages
RUN apt-get install  -y \
      ros-$ROS_DISTRO-ament-cmake-cppcheck \
      ros-$ROS_DISTRO-ament-cmake-cpplint \
      ros-$ROS_DISTRO-ament-cmake-lint-cmake \ 
      ros-$ROS_DISTRO-ament-cmake-test \
      ros-$ROS_DISTRO-ament-cmake-uncrustify \ 
      ros-$ROS_DISTRO-ament-cmake-vendor-package \ 
      ros-$ROS_DISTRO-ament-cmake-xmllint \
      ros-$ROS_DISTRO-ament-cppcheck \
      ros-$ROS_DISTRO-ament-cpplint \ 
      ros-$ROS_DISTRO-geographic-msgs \
      ros-$ROS_DISTRO-laser-filters \
      ros-$ROS_DISTRO-navigation2 \
      ros-$ROS_DISTRO-rmw-cyclonedds-cpp \
      ros-$ROS_DISTRO-slam-toolbox \
      ros-$ROS_DISTRO-teleop-tools \
      ros-$ROS_DISTRO-teleop-tools \
      ros-$ROS_DISTRO-teleop-twist-joy \
      ros-$ROS_DISTRO-tf-transformations \
      ros-$ROS_DISTRO-tf2-tools \
      ros-$ROS_DISTRO-xacro

 #  Gazebo tools
RUN apt-get install  -y \
      ros-$ROS_DISTRO-gazebo-ros-pkgs

 #  ROS tools
RUN apt-get install  -y \
      ros-$ROS_DISTRO-rviz2 \
      ros-$ROS_DISTRO-rviz-common \
      ros-$ROS_DISTRO-rqt \
      ros-$ROS_DISTRO-rqt-common-plugins \
      ros-$ROS_DISTRO-rqt-tf-tree \
      python3-rosdep

# clean apt
RUN apt-get autoclean && apt-get autoremove && rm -rf /var/lib/apt/lists/*

USER ${MY_USER}
# change color in bash green -> red
RUN sed -i 's/'"1;32"'/'"1;31"'/g' ~/.bashrc
RUN echo "export ROS_DISTRO=$ROS_DISTRO" >> ~/.bashrc
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc
RUN echo "export PROJECTS_DIR=$CONTAINER_PROJECTS_DIR" >> ~/.bashrc

ENV TERM xterm-256color
WORKDIR ${CONTAINER_PROJECTS_DIR}
ENV HOME=${MY_HOME}
CMD /bin/bash
